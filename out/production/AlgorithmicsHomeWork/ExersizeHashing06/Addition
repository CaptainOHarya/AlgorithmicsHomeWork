package ExersizeRabinCarpWithTemplates06;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Main2 {


    public static void main(String[] args) {

        // Строка в которой будем искать
        String source = "Alibaba or Alibubab? I do not know!";
        // Наш шаблон
        String pattern = "b*b";
        ArrayList<String> found = new ArrayList<>();
        found = defSeach(source, pattern);

        // TODO - надо скорее всего в цикле до конца нашей строки source делать

        if (found.isEmpty()) {
            // System.out.println(defSeach(source, pattern).isEmpty());
            // если нам вернулся нулевой список, то так и напечатаем
            System.out.println("Такой подстроки точно нет!!!");
        } else {
            // а иначе выведем наш массив найденных элементов
            System.out.println(Arrays.toString(defSeach(source, pattern).toArray()));
        }

    }

    public static ArrayList<String> defSeach(String source, String pattern) {
        System.out.println(source);
        // позиция символа "*" в нашем паттерне
        int asterikPosition = 1;

        // ArrayList для поиска
        ArrayList<String> foundSearch = new ArrayList<>(pattern.length());


        // преобразуем в массив наш шаблон для расчёта hash
        String[] patternArray = pattern.split("");

        // преобразуем в массив нашу изначальную строку для расчёта hash
        String[] sourceArray = source.split("");

        // переменная hash шаблона, изничально равно 0
        int patternHash = 0;

        // инициализация суммы кодов
        int windowHash = 0;

        if (source.length() < pattern.length()) {
            // System.out.println("Я этого совсем не вижу!!! Почему");
            // вернём пустой ArrayList поиска
            // Проверяем, что лежит в нашем листе

            return foundSearch;

        } else {
            // Подсчитаем сумму hash шаблона
            for (int i = 0; i < patternArray.length; i++) {
                patternHash += patternArray[i].hashCode();

            }
            // и вычтем hash символа "*"
            // таким образом найдём сумму кодов в паттерне без учёта '*'
            patternHash = patternHash - patternArray[asterikPosition].hashCode();

        }


        for (int start = 0; start < source.length() - (pattern.length() + 1); start++) {
            // System.out.println(start);
            if (start == 0) {

                for (int i = 0; i < pattern.length(); i++) {
                    windowHash += sourceArray[i].hashCode();
                }
                windowHash -= sourceArray[asterikPosition].hashCode();

            } else {
                //  System.out.println(windowHash);
                // windowHash = windowHash - sourceArray[start-1].hashCode() + sourceArray[start + asterikPosition - 1].hashCode();
                // windowHash = windowHash - sourceArray[start + asterikPosition].hashCode() + sourceArray[start + patternArray.length - 1].hashCode();
                windowHash -= sourceArray[start - 1].hashCode();
                //  System.out.println(windowHash);
                windowHash += sourceArray[start + patternArray.length - 1].hashCode();
                // System.out.println(windowHash);
                windowHash += sourceArray[start + asterikPosition - 1].hashCode();
                windowHash -= sourceArray[start + asterikPosition].hashCode();
                // System.out.println("Иттерация " + start + "  Позиция начало = " + sourceArray[start + asterikPosition - 1].hashCode() + "  Позиция конец = " + sourceArray[start + patternArray.length - 1].hashCode());
                // System.out.println(4 + " " + sourceArray[start + asterikPosition].hashCode());
                // System.out.println("Позиция " + start + "  Хэш проверка = " + windowHash + "   Хэш шаблон = " + patternHash);
            }


            if (windowHash == patternHash) {
                for (int i = 0; i < pattern.length(); i++) {
                    // System.out.println("Паттерн = " + patternArray[i] + " Строка = " +  sourceArray[start + i]);
                    if (patternArray[i] != "*" && sourceArray[start + i] != patternArray[i]) {


                    } else {
                        continue;

                        // System.out.println(foundSearch.add(sourceArray[start]));

                    }

                }
                // windowHash += sourceArray[start + asterikPosition].hashCode();
                foundSearch.add(sourceArray[start]); // если подошёл, то добавим в наш ArrayList
                System.out.println(start);
            }

        }
        // Вернём полученный ArrayList

        return foundSearch;
    }


}